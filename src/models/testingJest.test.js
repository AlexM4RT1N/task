const {getDateDeadline } = require('./dateDeadline')
const {getPriceAndTime } = require('./inputResult')



describe('testing the script to calculate the deadline date', () => {
  test('after working hours 16.09.2020', () => {
    const date = new Date('2020-09-17 00:35')
    expect(getDateDeadline(1,30,date)).toBe('Термін виконання: 17.09.20 о 11:30')
    expect(getDateDeadline(1,31,date)).toBe('Термін виконання: 17.09.20 о 12:00')
    expect(getDateDeadline(3,3,date)).toBe('Термін виконання: 17.09.20 о 13:30')
    expect(getDateDeadline(2,0,date)).toBe('Термін виконання: 17.09.20 о 12:00')
    expect(getDateDeadline(1,0,date)).toBe('Термін виконання: 17.09.20 о 11:00')
    expect(getDateDeadline(21,30,date)).toBe('Термін виконання: 21.09.20 о 13:30')
    expect(getDateDeadline(96,12,date)).toBe('Термін виконання: 01.10.20 о 16:30')
  }) 
  test('before working hours 17.09.2020', () => {
    const date = new Date('2020-09-17 09:18')
    expect(getDateDeadline(1,30,date)).toBe('Термін виконання: 17.09.20 о 11:30')
    expect(getDateDeadline(1,31,date)).toBe('Термін виконання: 17.09.20 о 12:00')
    expect(getDateDeadline(3,3,date)).toBe('Термін виконання: 17.09.20 о 13:30')
    expect(getDateDeadline(2,0,date)).toBe('Термін виконання: 17.09.20 о 12:00')
    expect(getDateDeadline(1,0,date)).toBe('Термін виконання: 17.09.20 о 11:00')
    expect(getDateDeadline(21,30,date)).toBe('Термін виконання: 21.09.20 о 13:30')
    expect(getDateDeadline(96,12,date)).toBe('Термін виконання: 01.10.20 о 16:30')
  }) 
  test('during working hours 14:43 17.09.2020', () => {
    const date = new Date('2020-09-17 14:43')
    expect(getDateDeadline(1,50,date)).toBe('Здамо за: дві години')
    expect(getDateDeadline(1,1,date)).toBe('Здамо за: дві години')
    expect(getDateDeadline(3,3,date)).toBe('Термін виконання: 17.09.20 о 18:00')
    expect(getDateDeadline(2,47,date)).toBe('Здамо за: три години')
    expect(getDateDeadline(1,0,date)).toBe('Здамо за: одну годину')
    expect(getDateDeadline(21,30,date)).toBe('Термін виконання: 21.09.20 о 18:30')
    expect(getDateDeadline(96,12,date)).toBe('Термін виконання: 02.10.20 о 12:00')
  })
})

describe('testing the script to get the price and time to complete the case', () => {
  test('text to be entered in the textarea field UK-RU = "0.05-1333" ', () => {
    expect(getPriceAndTime(0, "0.05-1333")).toEqual(["50,00", 1, 0])
    expect(getPriceAndTime(1, "0.05-1333")).toEqual(["50,00", 1, 0])
    expect(getPriceAndTime(-1, "0.05-1333")).toEqual(["50,00", 1, 0])
    expect(getPriceAndTime(678, "0.05-1333")).toEqual(["50,00", 1, 1])
    expect(getPriceAndTime('1', "0.05-1333")).toEqual(["50,00", 1, 0])
    expect(getPriceAndTime(1333, "0.05-1333")).toEqual(["66,65", 1, 30])
    expect(getPriceAndTime(1001, "0.05-1333")).toEqual(["50,05", 1, 15])
    expect(getPriceAndTime(16384, "0.05-1333")).toEqual(["819,20", 12, 47])
    // expect(getPriceAndTime(496514, "0.05-1333")).toEqual(["24 825,70", 372, 59])
  })
  test('text to be entered in the textarea field EN = "0.12-333" ', () => {
    expect(getPriceAndTime(0, "0.12-333")).toEqual(["120,00", 1, 0])
    expect(getPriceAndTime(169, "0.12-333")).toEqual(["120,00", 1, 0])
    expect(getPriceAndTime(170, "0.12-333")).toEqual(["120,00", 1, 1])
    expect(getPriceAndTime(1001, "0.12-333")).toEqual(["120,12", 3, 30])
    expect(getPriceAndTime(3892, "0.12-333")).toEqual(["467,04", 12, 11])
    // expect(getPriceAndTime(126958, "0.12-333")).toEqual(["15 234,96", 381, 45])
  })
  test('text is taken from files, .doc-.docx-.rtf = "1"  .pdf-.odt-.txt = "1.2" ', () => {
    expect(getPriceAndTime(1, "0.05-1333", "1.2")).toEqual(["50,00", 1, 0])
    expect(getPriceAndTime(1, "0.12-333", "1.2")).toEqual(["120,00", 1, 0])
    expect(getPriceAndTime(678, "0.05-1333", "1")).toEqual(["50,00", 1, 1])
    expect(getPriceAndTime(170, "0.12-333", "1")).toEqual(["120,00", 1, 1])
    expect(getPriceAndTime(678, "0.05-1333", "1.2")).toEqual(["50,00", 1, 13])
    expect(getPriceAndTime(170, "0.12-333", "1.2")).toEqual(["120,00", 1, 13])
    expect(getPriceAndTime(1001, "0.05-1333", "1.2")).toEqual(["60,06", 1, 30])
    expect(getPriceAndTime(1001, "0.12-333", "1.2")).toEqual(["144,14", 4, 12])
    expect(getPriceAndTime(16384, "0.05-1333", "1.2")).toEqual(["983,04", 15, 21])
    expect(getPriceAndTime(3892, "0.12-333", "1.2")).toEqual(["560,45", 14, 38])
  })
})
